name: build new app

on:
  workflow_dispatch:

jobs:
  buildNewApp:
    runs-on: macos-15
    steps:

      - uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: latest-stable

      - name: checkout testing
        uses: actions/checkout@v4

      - name: get new version
        id: get-new-version
        run: echo "NEW_VERSION=$(cat toggleMute/toggleMute.xcodeproj/project.pbxproj | grep -m1 'MARKETING_VERSION' | cut -d'=' -f2 | tr -d ';' | tr -d ' ')" >> $GITHUB_OUTPUT
    
      - name: get release notes from changelog
        uses: yashanand1910/standard-release-notes@v1.5.0
        id: get-release-notes
        with:
          changelog_path: ./CHANGELOG.md
          version: ${{ steps.get-new-version.outputs.NEW_VERSION }}

      - name: build app
        uses: sersoft-gmbh/xcodebuild-action@v3
        with:
          project: toggleMute/toggleMute.xcodeproj
          scheme: toggleMute
          destination: platform=macOS
          archive-path: App.xcarchive
          action: archive

      # - name: build app archive
      #   id: build-app-archive
      #   run: |
      #     cd toggleMute
      #     scheme_list=$(xcodebuild -list -json | tr -d "\n")
      #     scheme=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
      #     file_to_build=`ls -A | grep -i \\.xcodeproj\$`
      #     file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
      #     xcodebuild clean build analyze -scheme "$scheme" -project "$file_to_build" CODE_SIGNING_ALLOWED=NO CODE_SIGN_IDENTITY="" PROVISIONING_PROFILE_SPECIFIER=""
      #     if [ "${PIPESTATUS[0]}" -ne 0 ] ; then exit ${PIPESTATUS[0]} ; fi
      #     xcodebuild archive -scheme "$scheme" -archivePath App.xcarchive CODE_SIGNING_ALLOWED=NO CODE_SIGN_IDENTITY="" PROVISIONING_PROFILE_SPECIFIER=""
      #     cp ${{ github.workspace }}/toggleMuteDisableQuarantine.command App.xcarchive/Products/Applications/toggleMuteDisableQuarantine.command
      #     cp ${{ github.workspace }}/README.md App.xcarchive/Products/Applications/README.md
      #     chmod +x App.xcarchive/Products/Applications/toggleMuteDisableQuarantine.command
      #     ln -s /Applications/ App.xcarchive/Products/Applications/Applications
      #     hdiutil create -volname "toggleMute" -srcfolder "App.xcarchive/Products/Applications/" -ov -format UDZO "../toggleMute.dmg"
      #     echo "DMG_CHECKSUM=$(shasum -a 256 -b "../toggleMute.dmg" | awk '{print $1 }')" >> $GITHUB_OUTPUT

      - name: create new release and tag
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "toggleMute.dmg"
          body: "${{ steps.get-release-notes.outputs.release_notes }} <br/><br/><br/>SHA256sum: ${{ steps.build-app-archive.outputs.DMG_CHECKSUM}} "
          name: ${{ steps.get-new-version.outputs.NEW_VERSION }}
          tag: ${{ steps.get-new-version.outputs.NEW_VERSION }}

      - name: checkout homebrew-testing
        uses: actions/checkout@v4
        with:
          repository: 'satrik/homebrew-testing'
          token: ${{ secrets.CASK_REPO_TOKEN }}

      - name: bump version and update hash
        run: |
          sed -i '' 's/^  version .*/  version "${{ steps.get-new-version.outputs.NEW_VERSION }}"/' ${{ github.workspace }}/Casks/testing.rb
          sed -i '' 's/^  sha256 .*/  sha256 "${{ steps.build-app-archive.outputs.DMG_CHECKSUM}}"/' ${{ github.workspace }}/Casks/testing.rb

      - name: create pull request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.CASK_REPO_TOKEN }}
          commit-message: Update version of homebrew cask
          delete-branch: true
          title: 'Update version to ${{ steps.get-new-version.outputs.NEW_VERSION }}'
          labels: update
          draft: false
      - name: Merge Pull Request
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.CASK_REPO_TOKEN }}
          number: 1
          method: squash
          repo: satrik/omebrew-testing